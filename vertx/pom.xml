<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mascix</groupId>
  <artifactId>vertx-demo</artifactId>
  <version>${vertx.version}</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
    <exec-maven-plugin.version>3.5.1</exec-maven-plugin.version>

    <vertx.version>5.0.3</vertx.version>
    <junit-jupiter.version>5.12.2</junit-jupiter.version>

    <main.verticle>com.mascix.vertx_test.MainVertical</main.verticle>
    <launcher.class>io.vertx.launcher.application.VertxApplication</launcher.class>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-launcher-application</artifactId>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.20</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.19.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.20.0</version>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.basedir}</directory>
        <includes>
          <include>README.adoc</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>${maven-shade-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>${launcher.class}</Main-Class>
                    <Main-Verticle>${main.verticle}</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <outputFile>
                ${project.build.directory}/${project.artifactId}-${project.version}-fat.jar
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <configuration>
          <mainClass>io.vertx.core.Launcher</mainClass>
          <arguments>
            <argument>run</argument>
            <argument>${main.verticle}</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>native</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.11.0</version>
            <extensions>true</extensions>
            <executions>
              <execution>
                <id>build-native</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <mainClass>com.mascix.vertx_test.MainVertical</mainClass>
              <metadataRepository>
                <enabled>true</enabled>
              </metadataRepository>
              <buildArgs>
                <buildArg>--no-fallback</buildArg>
                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                <buildArg>-H:+PrintClassInitialization</buildArg>

                <!-- Include resources -->
                <buildArg>-H:IncludeResources=.*\.properties</buildArg>
                <buildArg>-H:IncludeResources=META-INF/.*</buildArg>

                <!-- Initialize at runtime (safer for Vert.x) -->
                <buildArg>--initialize-at-run-time=io.netty.channel.DefaultFileRegion</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.Native</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.unix.Errors</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.unix.IovArray</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.unix.Limits</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.util.internal.logging.Log4JLogger</buildArg>
                <buildArg>--initialize-at-run-time=com.fasterxml.jackson.databind.JavaType</buildArg>
                <buildArg>--initialize-at-run-time=com.fasterxml.jackson.databind.ObjectMapper</buildArg>
                <buildArg>--initialize-at-run-time=com.fasterxml.jackson.databind.type</buildArg>

                <!-- Enable native features -->
                <buildArg>--enable-http</buildArg>
                <buildArg>--enable-https</buildArg>

                <!-- Add opens for Java modules -->
                <buildArg>--add-opens</buildArg>
                <buildArg>java.base/java.lang=ALL-UNNAMED</buildArg>
                <buildArg>--add-opens</buildArg>
                <buildArg>java.base/java.nio=ALL-UNNAMED</buildArg>
                <buildArg>--add-opens</buildArg>
                <buildArg>java.base/sun.nio.ch=ALL-UNNAMED</buildArg>
                <buildArg>--add-opens</buildArg>
                <buildArg>java.base/java.util=ALL-UNNAMED</buildArg>
                <buildArg>--add-opens</buildArg>
                <buildArg>java.base/java.util.concurrent=ALL-UNNAMED</buildArg>

                <!-- System properties for native image -->
                <buildArg>-Dvertx.disableNativeTransport=false</buildArg>
                <buildArg>-Djava.net.preferIPv6Addresses=false</buildArg>
                <buildArg>-Dio.netty.noUnsafe=true</buildArg>
                <buildArg>-Dio.netty.allocator.type=unpooled</buildArg>
                <buildArg>-Dvertx.disableDnsResolver=false</buildArg>

                <!-- Network-specific configurations -->
                <!-- Security services option removed -->
                <buildArg>--enable-url-protocols=http,https</buildArg>
                <buildArg>--initialize-at-build-time=io.netty.util.internal.logging.InternalLoggerFactory</buildArg>
                <buildArg>--initialize-at-build-time=io.netty.util.internal.logging.JdkLoggerFactory</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.Epoll</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.EpollEventLoop</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.EpollEventArray</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.EpollDatagramChannel</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.EpollSocketChannel</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.epoll.EpollServerSocketChannel</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.socket.nio.NioDatagramChannel</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.socket.nio.NioSocketChannel</buildArg>
                <buildArg>--initialize-at-run-time=io.netty.channel.socket.nio.NioServerSocketChannel</buildArg>

                <!-- Verbose output for debugging -->
                <buildArg>-H:Log=registerResource:verbose</buildArg>
                <!-- Removed unsupported PrintNetworkStatistics option -->
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
